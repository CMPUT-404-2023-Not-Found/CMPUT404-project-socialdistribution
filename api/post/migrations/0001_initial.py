# Generated by Django 3.2.18 on 2023-02-17 22:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('host', models.URLField(help_text='The node that created the post', max_length=128)),
                ('published', models.DateTimeField(auto_now_add=True, verbose_name='Published At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('rev', models.IntegerField(default=0)),
                ('comment_count', models.IntegerField(default=0, verbose_name='Total Comment Count')),
                ('like_count', models.IntegerField(default=0, verbose_name='Total Like Count')),
                ('unlisted', models.BooleanField(default=False, help_text='Does this post appear in authors streams')),
                ('visibility', models.CharField(choices=[('FRIENDS', 'Friends'), ('PUBLIC', 'Public')], help_text='Who can view this post', max_length=16)),
                ('origin', models.URLField(help_text='The node that created the post', max_length=128)),
                ('source', models.URLField(help_text='The node that shared the post', max_length=128)),
                ('content', models.TextField()),
                ('content_type', models.CharField(choices=[('text/markdown', 'Markdown'), ('text/plain', 'Plain Text'), ('application/base64', 'Base64'), ('image/png;base64', 'PNG Image'), ('image/jpeg;base64', 'JPEG Image')], max_length=32, verbose_name='Content Type')),
                ('description', models.TextField(blank=True, default='')),
                ('title', models.CharField(max_length=128)),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name="Owner's Author Id")),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
